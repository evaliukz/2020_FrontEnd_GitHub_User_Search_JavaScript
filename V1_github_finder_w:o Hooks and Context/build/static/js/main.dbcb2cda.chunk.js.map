{"version":3,"sources":["components/layout/Navbar.js","components/users/UserItem.js","components/users/Users.js","App.js","index.js"],"names":["Navbar","icon","title","className","defaultProps","propType","PropTypes","string","isRequired","UserItem","user","login","avatar_url","html_url","src","alt","style","width","href","prototypes","object","Users","state","users","id","userStyle","this","map","key","Component","display","gridTemplateColumns","gridGap","App","loading","setState","axios","get","res","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRAGMA,EAAS,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACtB,OACE,yBAAKC,UAAU,qBACb,4BACE,uBAAGA,UAAWF,IADhB,IAC0BC,KAOhCF,EAAOI,aAAe,CACpBF,MAAO,gBACPD,KAAM,iBAMRD,EAAOK,SAAW,CAChBH,MAAOI,IAAUC,OAAOC,WACxBP,KAAMK,IAAUC,OAAOC,YAGVR,QCxBTS,EAAW,SAAC,GAA+C,IAAD,IAA5CC,KAAQC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,SAG7C,OACE,yBAAKV,UAAU,oBACb,yBACEW,IAAKF,EACLG,IAAI,GACJZ,UAAU,YACVa,MAAO,CAAEC,MAAO,UAElB,gCAAMN,GACN,6BACE,uBAAGO,KAAML,EAAUV,UAAU,4BAA7B,WAQRM,EAASU,WAAa,CACpBT,KAAMJ,IAAUc,OAAOZ,YAGVC,QCzBTY,E,4MACJC,MAAQ,CACNC,MAAO,CACL,CACEC,GAAI,IACJb,MAAO,UACPC,WAAY,iDACZC,SAAU,wCAEZ,CACEW,GAAI,IACJb,MAAO,UACPC,WAAY,iDACZC,SAAU,gC,uDAMd,OACE,yBAAKG,MAAOS,GACTC,KAAKJ,MAAMC,MAAMI,KAAI,SAACjB,GAAD,OACpB,kBAAC,EAAD,CAAUkB,IAAKlB,EAAKc,GAAId,KAAMA,Y,GAtBpBmB,aA6BdJ,EAAY,CAChBK,QAAS,OACTC,oBAAqB,gBACrBC,QAAS,QAGIX,I,iBCDAY,G,kNAxBbX,MAAQ,CACNC,MAAO,GACPW,SAAS,G,yLAKTR,KAAKS,SAAS,CAAED,SAAS,I,SACPE,IAAMC,IAAI,gC,OAAtBC,E,OACNZ,KAAKS,SAAS,CAAEZ,MAAOe,EAAIC,KAAML,SAAS,I,qIAI1C,OACE,yBAAK/B,UAAU,OACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,aACb,kBAAC,EAAD,Y,GAvBQ0B,cCHlBW,IAASC,OAEP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.dbcb2cda.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Navbar = ({ icon, title }) => {\n  return (\n    <nav className='navbar bg-primary'>\n      <h1>\n        <i className={icon} /> {title}\n      </h1>\n    </nav>\n  );\n};\n\n// default props, can be overwritten in App.js\nNavbar.defaultProps = {\n  title: \"Github Finder\",\n  icon: \"fab fa-github\",\n};\n\n// this sets protocals, if pass non-string\n// or not pass any title or icon, errors show\n\nNavbar.propType = {\n  title: PropTypes.string.isRequired,\n  icon: PropTypes.string.isRequired,\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst UserItem = ({ user: { login, avatar_url, html_url } }) => {\n  // this is another constructor way to build state, not recomennded, see 3.11\n\n  return (\n    <div className='card text-cender'>\n      <img\n        src={avatar_url}\n        alt=''\n        className='round-img'\n        style={{ width: \"60px\" }}\n      />\n      <h3> {login}</h3>\n      <div>\n        <a href={html_url} className='btn btn-dark btn-sm my-1'>\n          More\n        </a>\n      </div>\n    </div>\n  );\n};\n\nUserItem.prototypes = {\n  user: PropTypes.object.isRequired,\n};\n\nexport default UserItem;\n","import React, { Component } from \"react\";\nimport UserItem from \"./UserItem\";\n\nclass Users extends Component {\n  state = {\n    users: [\n      {\n        id: \"1\",\n        login: \"mojombo\",\n        avatar_url: \"https://avatars0.githubusercontent.com/u/1?v=4\",\n        html_url: \"https://api.github.com/users/mojombo\",\n      },\n      {\n        id: \"2\",\n        login: \"defunkt\",\n        avatar_url: \"https://avatars0.githubusercontent.com/u/2?v=4\",\n        html_url: \"https://github.com/defunkt\",\n      },\n    ],\n  };\n\n  render() {\n    return (\n      <div style={userStyle}>\n        {this.state.users.map((user) => (\n          <UserItem key={user.id} user={user} />\n        ))}\n      </div>\n    );\n  }\n}\n\nconst userStyle = {\n  display: \"grid\",\n  gridTemplateColumns: \"repeat(3,1fr)\",\n  gridGap: \"1rem\",\n};\n\nexport default Users;\n","import React, { Component } from \"react\"; //import packages\nimport Navbar from \"./components/layout/Navbar\";\nimport UserItem from \"./components/users/UserItem\";\nimport Users from \"./components/users/Users\";\nimport axios from \"axios\";\nimport \"./App.css\"; //global css\n\nclass App extends Component {\n  //class cannot have ()\n  //change to class\n  //className='navbar bg-primary'>\n  // <Navbar title='Github Finder' icon='fab fa-github' />\n\n  state = {\n    users: [],\n    loading: false, //while fetching, waiting, loading is true; when getting the data, loading is false\n  };\n\n  //fetch data from api\n  async componentDidMount() {\n    this.setState({ loading: true });\n    const res = await axios.get(\"https://api.github.com/users\");\n    this.setState({ users: res.data, loading: false });\n  }\n\n  render() {\n    return (\n      <div className='App'>\n        <Navbar />\n        <div className='container'>\n          <Users />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\"; //main library\nimport ReactDOM from \"react-dom\"; //render in a broswer\nimport App from \"./App\";\n\nReactDOM.render(\n  //takes in what you want render and where you wanna render\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\") //output to root in <div>\n);\n"],"sourceRoot":""}